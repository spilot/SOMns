
class AssignProductToVariableNodeMicrobenchmark usingPlatform: platform andHarness: harness = (
| private Benchmark = harness Benchmark.
  private Array     = platform kernel Array.
|
) (

  class AssignProductToVariableNodeMicrobenchmark = Benchmark ()(

    benchmark = (
      | flags |
      flags:: Array new: 5000.
      ^ self sieve: flags size: 5000.
    )

    verifyResult: result = (
      ^ self assert: 669 equals: result
    )

    sieve: flags size: size = (
      | primeCount |
      primeCount:: 0.
      flags putAll: true.
      2 to: size do: [ :i |
        (flags at: i - 1)
          ifTrue: [
            | k |
            primeCount:: primeCount + 1.
            k:: i + i.
            [ k <= size ]
              whileTrue: [
                flags at: k - 1 put: false. k:: k + i ]. ] ].
      ^ primeCount
    )
  )

  public newInstance = ( ^ AssignProductToVariableNodeMicrobenchmark new )
  public setupVerifiedRun: run = ( run innerIterations: 1 )
)
